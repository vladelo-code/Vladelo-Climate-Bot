import logging
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import CommandStart, Command
from utils import city_to_translit, month_to_number
from parser import get_weather_data
from config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
@dp.message(CommandStart())
async def start(message: Message):
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç! ü§üüèª\n–≠—Ç–æ Vladelo-Climate-Bot, —è –ø–æ–¥—Å–∫–∞–∂—É —Ç–µ–±–µ –ø–æ–≥–æ–¥—É –≤ –Ω—É–∂–Ω–æ–º –≥–æ—Ä–æ–¥–µ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü.\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–æ—Ä–æ–¥ –∏ –º–µ—Å—è—Ü.\n\n<b>–§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞:</b>\n<i>–ú–æ—Å–∫–≤–∞</i>\n<i>–ú–∞—Ä—Ç</i>',
        parse_mode='HTML')


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /how
@dp.message(Command('how'))
async def start(message: Message):
    await message.answer('–¢—É—Ç –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞.', parse_mode='HTML')


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /help
@dp.message(Command('help'))
async def start(message: Message):
    await message.answer('–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –ø–∏—à–∏—Ç–µ –º–Ω–µ @vladelo.')


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
@dp.message()
async def process_message(message: Message):
    try:
        # –†–∞–∑–¥–µ–ª—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ '\n' –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ city –∏ month
        city, month = message.text.split('\n')

        # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–æ –∫—Ä–∞—è–º –∏ –ø—Ä–∏–≤–æ–¥–∏–º month –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        city, month = city.strip(), month.strip().lower()

        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –≤ —Ç—Ä–∞–Ω—Å–ª–∏—Ç –∏ –≤—ã–≤–æ–¥–∏–º –≤ –ª–æ–≥
        city_translit = city_to_translit(city.lower())
        logging.info(f'–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞: {city} -> {city_translit}')

        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ –≤ —á–∏—Å–ª–æ –∏ –≤—ã–≤–æ–¥–∏–º –≤ –ª–æ–≥
        month_number = month_to_number(month)
        logging.info(f'–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞: {month} -> {month_number}')

        # –ï—Å–ª–∏ –º–µ—Å—è—Ü –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if not month_number:
            await message.answer("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–µ—Å—è—Ü.")
            return None

        # –û–±—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–∞—Ä—Å–µ—Ä—É –∏ –ø–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –±–æ—Ç
        weather_data = get_weather_data(city_translit, month_number)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ª–æ–≤–∞—Ä—å –Ω–µ –ø—É—Å—Ç–æ–π –∏ –≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ, –∏–Ω–∞—á–µ ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if weather_data:
            response = (f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city} –∑–∞ {month}:\n"
                        f"üåû –î–Ω–µ–º: {weather_data['temp_day']}¬∞C\n"
                        f"üåô –ù–æ—á—å—é: {weather_data['temp_night']}¬∞C\n"
                        f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_data['humidity']}%")
        else:
            response = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.\n–í–æ–∑–º–æ–∂–Ω–æ, —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø–æ –Ω–µ–º—É –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ."

    except ValueError:
        response = "–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏ –º–µ—Å—è—Ü –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n<i>–ú–æ—Å–∫–≤–∞</i>\n<i>–ú–∞—Ä—Ç</i>"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(response, parse_mode='HTML')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞, –µ—ë –º—ã –≤—ã–∑—ã–≤–∞–µ–º –∏–∑ main.py
async def main():
    await dp.start_polling(bot)
